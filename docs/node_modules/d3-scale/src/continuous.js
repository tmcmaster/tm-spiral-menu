define(["exports","../../d3-array/index.js","../../d3-interpolate/index.js","./array.js","./constant.js","./number.js"],function(_exports,_index,_index2,_array,_constant,_number){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.deinterpolateLinear=deinterpolateLinear;_exports.copy=function(source,target){return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp())};_exports.default=function(deinterpolate,reinterpolate){var domain=unit,range=unit,interpolate=_index2.interpolate,clamp=!1,piecewise,output,input;function rescale(){piecewise=2<_Mathmin(domain.length,range.length)?polymap:bimap;output=input=null;return scale}function scale(x){return(output||(output=piecewise(domain,range,clamp?deinterpolateClamp(deinterpolate):deinterpolate,interpolate)))(+x)}scale.invert=function(y){return(input||(input=piecewise(range,domain,deinterpolateLinear,clamp?reinterpolateClamp(reinterpolate):reinterpolate)))(+y)};scale.domain=function(_){return arguments.length?(domain=_array.map.call(_,_number.default),rescale()):domain.slice()};scale.range=function(_){return arguments.length?(range=_array.slice.call(_),rescale()):range.slice()};scale.rangeRound=function(_){return range=_array.slice.call(_),interpolate=_index2.interpolateRound,rescale()};scale.clamp=function(_){return arguments.length?(clamp=!!_,rescale()):clamp};scale.interpolate=function(_){return arguments.length?(interpolate=_,rescale()):interpolate};return rescale()};_constant=babelHelpers.interopRequireDefault(_constant);_number=babelHelpers.interopRequireDefault(_number);var _Mathmin=Math.min,unit=[0,1];function deinterpolateLinear(a,b){return(b-=a=+a)?function(x){return(x-a)/b}:(0,_constant.default)(b)}function deinterpolateClamp(deinterpolate){return function(a,b){var d=deinterpolate(a=+a,b=+b);return function(x){return x<=a?0:x>=b?1:d(x)}}}function reinterpolateClamp(reinterpolate){return function(a,b){var r=reinterpolate(a=+a,b=+b);return function(t){return 0>=t?a:1<=t?b:r(t)}}}function bimap(domain,range,deinterpolate,reinterpolate){var d0=domain[0],d1=domain[1],r0=range[0],r1=range[1];if(d1<d0)d0=deinterpolate(d1,d0),r0=reinterpolate(r1,r0);else d0=deinterpolate(d0,d1),r0=reinterpolate(r0,r1);return function(x){return r0(d0(x))}}function polymap(domain,range,deinterpolate,reinterpolate){var j=_Mathmin(domain.length,range.length)-1,d=Array(j),r=Array(j),i=-1;if(domain[j]<domain[0]){domain=domain.slice().reverse();range=range.slice().reverse()}while(++i<j){d[i]=deinterpolate(domain[i],domain[i+1]);r[i]=reinterpolate(range[i],range[i+1])}return function(x){var i=(0,_index.bisect)(domain,x,1,j)-1;return r[i](d[i](x))}}});